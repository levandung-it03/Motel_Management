CREATE DATABASE Motel_Management
CREATE TABLE Region (
    regionId VARCHAR(20) UNIQUE NOT NULL,
    region VARCHAR(20) UNIQUE NOT NULL,
    CONSTRAINT PK_Region PRIMARY KEY (regionId)
);
CREATE TABLE Account (
    userId VARCHAR(20) UNIQUE NOT NULL,
    name VARCHAR(20) NOT NULL,
    username VARCHAR(10) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    CONSTRAINT PK_Account PRIMARY KEY (userId)
);
CREATE TABLE Room (
    roomId VARCHAR(20) UNIQUE NOT NULL,
    quantity INT DEFAULT 0 CHECK (quantity <= maxQuantity),
    maxQuantity INT DEFAULT 0,
    CONSTRAINT PK_Room PRIMARY KEY (RoomId)
);
CREATE TABLE ElectricRange(
    rangeId VARCHAR(20) UNIQUE NOT NULL,
    rangeName VARCHAR(20) UNIQUE NOT NULL,
    minRangeValue INT DEFAULT 0,
    maxRangeValue INT DEFAULT 0,
    price INT DEFAULT 0,
    CONSTRAINT PK_ElectricRange PRIMARY KEY (rangeId)
);
CREATE TABLE WaterRange(
    rangeId VARCHAR(20) UNIQUE NOT NULL,
    rangeName VARCHAR(20) UNIQUE NOT NULL,
    minRangeValue INT DEFAULT 0,
    maxRangeValue INT DEFAULT 0,
    price INT DEFAULT 0,
    CONSTRAINT PK_WaterRange PRIMARY KEY (rangeId)
);

CREATE TABLE Person (
    identifier VARCHAR(20) UNIQUE NOT NULL,
    lastName VARCHAR(70) NOT NULL,
    firstName VARCHAR(30) NOT NULL,
    birthday DATE NOT NULL,
    phone VARCHAR(15) UNIQUE NOT NULL,
    gender VARCHAR(1) NOT NULL,
    jobTitle VARCHAR(70) NOT NULL,
    permanentAddress VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    bankAccountNumber VARCHAR(255),
    bank VARCHAR(255),

    CONSTRAINT PK_Person PRIMARY KEY (identifier)
);

CREATE TABLE PersonTempHistory (
    identifier VARCHAR(20) UNIQUE NOT NULL,
    lastName VARCHAR(70) NOT NULL,
    firstName VARCHAR(30) NOT NULL,
    birthday DATE NOT NULL,
    phone VARCHAR(15) UNIQUE NOT NULL,
    gender VARCHAR(1) NOT NULL,
    jobTitle VARCHAR(70) NOT NULL,
    permanentAddress VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    bankAccountNumber VARCHAR(255),
    bank VARCHAR(255),
    CONSTRAINT PK_Person PRIMARY KEY (identifier)
);

CREATE TABLE Contract (
    contractId VARCHAR(20) UNIQUE NOT NULL,
    identifier VARCHAR(20) NOT NULL,
    roomId VARCHAR(20) NOT NULL,
    quantity INT DEFAULT 0,
    roomDeposit INT DEFAULT 0,
    isFamily BOOLEAN DEFAULT FALSE,
    startingDate DATE DEFAULT (CURRENT_DATE()),
    endingDate DATE DEFAULT (CURRENT_DATE()),
    isRegisteredPerAddress BOOLEAN DEFAULT FALSE,
    checkedOut BOOLEAN DEFAULT FALSE,
    creatingTime DATETIME DEFAULT (CURRENT_TIMESTAMP()),

    CONSTRAINT PK_Contract PRIMARY KEY (contractId),
    CONSTRAINT FK_Contract_identifier FOREIGN KEY (identifier) REFERENCES Person(identifier),
    CONSTRAINT FK_Contract_roomId FOREIGN KEY (roomId) REFERENCES Room(roomId),
    CONSTRAINT UK_Contract UNIQUE (identifier,roomId,startingDate)
);

CREATE TABLE CheckOut(
    checkOutId VARCHAR(20) UNIQUE NOT NULL,
    contractId VARCHAR(20) NOT NULL,
    checkOutDate DATE DEFAULT (CURRENT_DATE()),
    reason VARCHAR(255),

    CONSTRAINT PK_CheckOut PRIMARY KEY (checkOutId),
    CONSTRAINT FK_CheckOut_contractId FOREIGN KEY (contractId) REFERENCES Contract(contractId)
);

CREATE TABLE RoomPriceHistory(
    roomId VARCHAR(20) NOT NULL,
    priceRaisedDate DATE NOT NULL DEFAULT CURRENT_DATE,
    roomPrice INT DEFAULT 0,

    CONSTRAINT FK_RaisingRoomPrice_roomId FOREIGN KEY (roomId) REFERENCES Room(roomId),
    CONSTRAINT PK_RaisingRoomPrice PRIMARY KEY (roomId, priceRaisedDate)
);

CREATE TABLE Invoice(
    invoiceId VARCHAR(20) UNIQUE NOT NULL,
    roomId VARCHAR(20) NOT NULL,
    priceRaisedDate DATE NOT NULL,
    dateCreated DATE DEFAULT CURRENT_DATE,
    paymentYear INT NOT NULL,
    paymentMonth INT NOT NULL,
    formerElectricNumber INT DEFAULT 0,
    newElectricNumber INT DEFAULT 0,
    formerWaterNumber INT DEFAULT 0,
    newWaterNumber INT DEFAULT 0,
    electricPrice INT DEFAULT 0,
    waterPrice INT DEFAULT 0,
    garbage INT DEFAULT 0,
    wifi INT DEFAULT 0,
    vehicle INT DEFAULT 0,
    wasPaid BOOLEAN DEFAULT FALSE,

    CONSTRAINT PK_Invoice PRIMARY KEY (invoiceId),
    CONSTRAINT FK_RoomPriceHistory_priceRaisedDate FOREIGN KEY (roomId, priceRaisedDate) REFERENCES RoomPriceHistory(roomId, priceRaisedDate),
    CONSTRAINT UK_Invoice UNIQUE (roomId, paymentMonth, paymentYear)
);



-------------------------------------- INSERT DATA ----------------------------------------------------------------------------
-- MK: root#123
INSERT INTO Account VALUES ("admin000", "Root", "root", "$2a$10$j2WJzi7wT1BazuUsnKa8vOmbanLacmKc042wJLWWUxMK5eM3zPXjS");

INSERT INTO Room (roomId, quantity, maxQuantity) VALUES
('P001', 1, 3),
('P002', 2, 4),
('P003', 1, 2),
('P004', 3, 5),
('P005', 1, 2);

-- Insert sample data into ElectricRange table
INSERT INTO ElectricRange (rangeId, rangeName, minRangeValue, maxRangeValue, price) VALUES
('E12485028391', 'RangeA', 0, 100, 1000),
('E59290352903', 'RangeB', 100, 200, 2000),
('E12412904244', 'RangeC', 200, 300, 3000),
('E63434634638', 'RangeD', 300, 400, 4000);


-- Insert sample data into WaterRange table
INSERT INTO WaterRange (rangeId, rangeName, minRangeValue, maxRangeValue, price) VALUES
('W34906234492', 'RangeA', 0, 50, 500),
('W29342903493', 'RangeB', 50, 100, 1000),
('W84395423858', 'RangeC', 100, 150, 1500),
('W28935825324', 'RangeD', 150, 200, 2000),
('W23095290359', 'RangeE', 200, 250, 3000);


-- Insert sample data into Person table
INSERT INTO Person (identifier, lastName, firstName, birthday, phone, gender, jobTitle, permanentAddress, email, bankAccountNumber, bank) VALUES
('345678345612', 'Nguyen', 'An', '1990-01-01', '0901234567', 'M', 'Engineer', '123 Street A', 'an.nguyen@example.com', '1234567890', 'Bank A'),
('789438345612', 'Le', 'Binh', '1985-02-02', '0902234567', 'M', 'Teacher', '234 Street B', 'binh.le@example.com', '2234567890', 'Bank B'),
('385473543601', 'Tran', 'Chau', '1992-03-03', '0903234567', 'F', 'Doctor', '345 Street C', 'chau.tran@example.com', '3234567890', 'Bank C'),
('512128518257', 'Pham', 'Dung', '1988-04-04', '0904234567', 'F', 'Nurse', '456 Street D', 'dung.pham@example.com', '4234567890', 'Bank D'),
('385473234412', 'Ho', 'E', '1995-05-05', '0905234567', 'M', 'Scientist', '567 Street E', 'e.ho@example.com', '5234567890', 'Bank E');

-- Insert sample data into PersonTempHistory table
INSERT INTO PersonTempHistory (identifier, lastName, firstName, birthday, phone, gender, jobTitle, permanentAddress, email, bankAccountNumber, bank) VALUES
('345678345612', 'Nguyen', 'An', '1990-01-01', '0901234567', 'M', 'Engineer', '123 Street A', 'an.nguyen@example.com', '1234567890', 'Bank A'),
('789438345612', 'Le', 'Binh', '1985-02-02', '0902234567', 'M', 'Teacher', '234 Street B', 'binh.le@example.com', '2234567890', 'Bank B'),
('385473543601', 'Tran', 'Chau', '1992-03-03', '0903234567', 'F', 'Doctor', '345 Street C', 'chau.tran@example.com', '3234567890', 'Bank C'),
('512128518257', 'Pham', 'Dung', '1988-04-04', '0904234567', 'F', 'Nurse', '456 Street D', 'dung.pham@example.com', '4234567890', 'Bank D'),
('385473234412', 'Ho', 'E', '1995-05-05', '0905234567', 'M', 'Scientist', '567 Street E', 'e.ho@example.com', '5234567890', 'Bank E');

-- Insert sample data into Contract table
INSERT INTO Contract (contractId, identifier, roomId, quantity, roomDeposit, isFamily, startingDate, endingDate, isRegisteredPerAddress, checkedOut, creatingTime) VALUES
('CON001', '345678345612', 'P001', 1, 1000, FALSE, '2023-01-01', '2023-12-31', TRUE, FALSE, CURRENT_TIMESTAMP),
('CON002', '789438345612', 'P002', 2, 2000, TRUE, '2023-02-01', '2023-12-31', TRUE, FALSE, CURRENT_TIMESTAMP),
('CON003', '385473543601', 'P003', 1, 1500, FALSE, '2023-03-01', '2023-12-31', FALSE, FALSE, CURRENT_TIMESTAMP),
('CON004', '512128518257', 'P004', 3, 3000, TRUE, '2023-04-01', '2023-12-31', TRUE, FALSE, CURRENT_TIMESTAMP),
('CON005', '385473234412', 'P005', 1, 1200, FALSE, '2023-05-01', '2023-12-31', FALSE, FALSE, CURRENT_TIMESTAMP);


-- Insert sample data into RoomPriceHistory table
INSERT INTO RoomPriceHistory (roomId, priceRaisedDate, roomPrice) VALUES
('P001', '2023-01-01', 10000),
('P001', '2023-06-01', 15000),
('P001', '2023-12-01', 16000),
('P001', '2024-01-01', 17000),
('P002', '2023-01-01', 20000),
('P003', '2023-01-01', 15000),
('P004', '2023-01-01', 25000),
('P005', '2023-01-01', 18000);

-- Insert sample data into Invoice table
INSERT INTO Invoice (invoiceId, roomId, priceRaisedDate, dateCreated, paymentYear, paymentMonth, formerElectricNumber, newElectricNumber, formerWaterNumber, newWaterNumber, electricPrice, waterPrice, garbage, wifi, vehicle, wasPaid) VALUES
('INV001', 'P001', '2023-01-01', '2023-01-20', 2023, 1, 100, 150, 50, 100, 100000, 50000, 300, 200, 100, FALSE),
('INV002', 'P002', '2023-01-01', '2023-02-20', 2023, 2, 200, 300, 100, 110, 300000, 15000, 400, 300, 200, TRUE),
('INV003', 'P003', '2023-01-01', '2023-03-20', 2023, 3, 300, 310, 150, 160, 40000, 20000, 500, 400, 300, FALSE),
('INV004', 'P004', '2023-01-01', '2023-04-20', 2023, 4, 200, 210, 100, 110, 30000, 15000, 600, 500, 400, TRUE),
('INV005', 'P005', '2023-01-01', '2023-05-20', 2023, 5, 200, 210, 100, 110, 30000, 15000, 700, 600, 500, FALSE),


('INV011', 'P001','2023-01-01', '2023-02-01', 2023, 2, 150, 160, 50, 60, 20000, 10000, 300, 200, 100, FALSE),
('INV012', 'P001','2023-01-01', '2023-03-01', 2023, 3, 160, 170, 60, 70, 20000, 10000, 300, 200, 100, TRUE),
('INV013', 'P001','2023-01-01', '2023-04-01', 2023, 4, 170, 180, 70, 80, 20000, 10000, 300, 200, 100, TRUE),
('INV014', 'P001','2023-01-01', '2023-05-01', 2023, 5, 180, 190, 80, 90, 20000, 10000, 300, 200, 100, TRUE),
('INV015', 'P001','2023-06-01', '2023-06-01', 2023, 6, 190, 200, 90, 100, 20000, 10000, 300, 200, 100, FALSE),
('INV016', 'P001','2023-06-01', '2023-07-01', 2023, 7, 200, 210, 100, 110, 30000, 15000, 300, 200, 100, FALSE),
('INV017', 'P001','2023-06-01', '2023-08-01', 2023, 8, 210, 220, 110, 120, 30000, 15000, 300, 200, 100, TRUE),
('INV018', 'P001','2023-06-01', '2023-09-01', 2023, 9, 220, 230, 120, 130, 30000, 15000, 300, 200, 100, FALSE),
('INV019', 'P001','2023-06-01', '2023-10-01', 2023, 10, 230, 240, 130, 140, 30000, 15000, 300, 200, 100, TRUE),
('INV020', 'P001','2023-06-01', '2023-11-01', 2023, 11, 240, 250, 140, 150, 30000, 15000, 300, 200, 100, FALSE),
('INV021', 'P001','2023-12-01', '2023-12-01', 2023, 12, 250, 270, 150, 170, 60000, 30000, 300, 200, 100, TRUE),
('INV022', 'P001','2023-12-01', '2024-01-01', 2024, 1, 270, 290, 170, 190, 60000, 30000, 300, 200, 100, FALSE),
('INV023', 'P001','2023-12-01', '2024-02-01', 2024, 2, 290, 300, 190, 200, 30000, 15000, 300, 200, 100, FALSE),
('INV024', 'P001','2023-12-01', '2024-03-01', 2024, 3, 300, 310, 200, 210, 40000, 30000, 300, 200, 100, TRUE);